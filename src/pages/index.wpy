<template>
    <board></board>
</template>

<script>
  import wepy from 'wepy'
  import Board from '../components/Board'

  export default class Index extends wepy.page {
    data = {
      matrix: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }
    config = {
      navigationBarTitleText: '2048'
    }
    components = {
      board: Board
    }
    events = {
      'combineToLeft':()=>{
        let newMatrix = JSON.parse(JSON.stringify(this.data.matrix))
        let len = newMatrix.length
        for(let row = 0; row < len; row++) {
          for (let col = len; col > 0; col--) {
            if(newMatrix[row][col] > 0 && newMatrix[row][col] === newMatrix[row][col - 1]) {
              newMatrix[row][col - 1] *= 2
              newMatrix[row][col] = 0
              
            } else if (newMatrix[row][col] > 0 && newMatrix[row][col - 1] === 0) {
              newMatrix[row][col - 1] = newMatrix[row][col]
              newMatrix[row][col] = 0
            }
          }
        }
        this.addRandomNum(newMatrix)
      },
      'combineToRight':()=>{
        let newMatrix = JSON.parse(JSON.stringify(this.data.matrix))
        let len = newMatrix.length
        for(let row = 0; row < len; row++) {
          for (let col = 0; col < len; col++) {
            if(newMatrix[row][col] > 0 && newMatrix[row][col] === newMatrix[row][col + 1]) {
              newMatrix[row][col + 1] *= 2
              newMatrix[row][col] = 0
            } else if (newMatrix[row][col] > 0 && newMatrix[row][col + 1] === 0) {
              newMatrix[row][col + 1] = newMatrix[row][col]
              newMatrix[row][col] = 0
            }
          }
        }
       this.addRandomNum(newMatrix)
      },
      'combineToTop':()=>{
        let newMatrix = JSON.parse(JSON.stringify(this.data.matrix))
        let len = newMatrix.length
        for(let row = len - 1; row > 0; row--) {
          for (let col = 0; col < len; col++) {
            if(newMatrix[row][col] > 0 && newMatrix[row][col] === newMatrix[row - 1][col] ) {
              newMatrix[row - 1][col] *= 2
              newMatrix[row][col] = 0
            } else if (newMatrix[row][col] > 0 && newMatrix[row - 1][col] === 0 ) {
              newMatrix[row - 1][col] = newMatrix[row][col]
              newMatrix[row][col] = 0
            }
          }
        }
        this.addRandomNum(newMatrix)
      },
      'combineToBottom':()=>{
        let newMatrix = JSON.parse(JSON.stringify(this.data.matrix))
        let len = newMatrix.length
        for(let row = 0; row < len - 1; row++) {
          for (let col = 0; col < len; col++) {
            if(newMatrix[row][col] > 0 && newMatrix[row][col] === newMatrix[row + 1][col]) {
              newMatrix[row + 1][col] *= 2
              newMatrix[row][col] = 0
            } else if (newMatrix[row][col] > 0 && newMatrix[row + 1][col] === 0)  {
              newMatrix[row + 1][col] = newMatrix[row][col]
              newMatrix[row][col] = 0
            }
          }
        }
        this.addRandomNum(newMatrix)
      }
    }
    getRandomNum (arr) {
      return Math.floor(Math.random()*arr.length)
    }
    getEmptyCell (newMatrix) {
      let emptyCells = []
      for(let i = 0; i<newMatrix.length;i++) {
        for(let j = 0; j<newMatrix[i].length;j++) {
          let value = newMatrix[i][j]
          if(value === 0) {
            emptyCells.push([i,j])
          }
        }
      }
      return emptyCells
    }
    addRandomNum (newMatrix) {
      let emptyCells = this.getEmptyCell(newMatrix)
      if(emptyCells.length === 0) return
      let randomCell = this.getRandomNum(emptyCells)
      let randomNum = this.getRandomNum([2,4])
      newMatrix[emptyCells[randomCell][0]][emptyCells[randomCell][1]] = [2,4][randomNum]
      this.matrix = newMatrix
    }

    onLoad(){
      this.addRandomNum(this.data.matrix)
    }
  }
</script>

<style lang="scss">

</style>
